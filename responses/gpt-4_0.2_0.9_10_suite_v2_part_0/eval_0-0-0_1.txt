Sure, here is a function that does exactly what you need:

```javascript
function keys_and_prices(raw_obj) {
    let keys = [];
    let prices = [];

    for (let key in raw_obj) {
        if (raw_obj.hasOwnProperty(key)) {
            keys.push(key);
            prices.push(raw_obj[key].price);
        }
    }

    return [keys, prices];
}
```

This function iterates over the properties of the input object. For each property, it adds the property name (the key) to the `keys` array and the `price` field of the property value to the `prices` array. Finally, it returns an array containing the `keys` and `prices` arrays.

Here is how you can use it:

```javascript
var itemsToBuy = { milk: { quantity : 5, price: 20 }, bread: { quantity : 2, price: 15 }, potato: { quantity : 3, price: 10 } }
let ret = keys_and_prices(itemsToBuy)
console.log(ret[0]) // ["milk", "bread", "potato"]
console.log(ret[1]) // [20, 15, 10]
```

Please note that the order of keys in an object is not guaranteed in JavaScript. If you need the keys and prices in a specific order, you will need to sort the `keys` and `prices` arrays after they are created.