Sure, you can use `Object.keys()` and `Array.map()` to achieve this. Here is the function you need:

```javascript
function keys_and_prices(raw_obj) {
    var keys = Object.keys(raw_obj);
    var prices = keys.map(key => raw_obj[key].price);
    return [keys, prices];
}
```

This function first gets all the keys from the input object and then maps each key to its corresponding price. The result is an array of two arrays: one for the keys and one for the prices.

Here is how you can use it:

```javascript
var itemsToBuy = { milk: { quantity : 5, price: 20 }, bread: { quantity : 2, price: 15 }, potato: { quantity : 3, price: 10 } }
let ret = keys_and_prices(itemsToBuy)
console.log(ret[0]) // ["milk", "bread", "potato"]
console.log(ret[1]) // [20, 15, 10]
```

Please note that the order of keys and prices in the output arrays depends on the order of properties in the original object, which is not guaranteed to be consistent across different JavaScript engines. If you need a specific order, you might need to sort the keys array before mapping it to prices.