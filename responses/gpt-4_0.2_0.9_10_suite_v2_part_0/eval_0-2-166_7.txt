Tailwind CSS is a utility-first CSS framework that provides low-level utility classes to build custom designs. It doesn't directly support child selectors or any other complex CSS selectors as it's not a preprocessor like SASS or LESS. 

However, you can use Tailwind CSS with PostCSS (a tool for transforming CSS with JavaScript), and you can use it to add a plugin like `postcss-nested` to enable support for nested rules, like child selectors.

Here's an example of how you might set this up:

1. Install `postcss-nested`:

```bash
npm install postcss-nested
```

2. Then, in your `postcss.config.js`, add `postcss-nested`:

```javascript
module.exports = {
  plugins: [
    require('tailwindcss'),
    require('postcss-nested'),
    require('autoprefixer'),
  ]
}
```

3. Now, you can use child selectors in your CSS:

```css
div.section > div {
  @apply bg-red-500;
}
```

In this example, direct children `div` of `div` with class `section` will have a red background.

Remember, Tailwind CSS is designed to be used directly in your HTML or JSX files, not in your CSS files. The `@apply` directive is useful for extracting component classes, but it's not recommended to build entire layouts or pages with it.