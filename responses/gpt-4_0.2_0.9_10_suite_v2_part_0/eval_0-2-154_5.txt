Sure, here is a generator function that should do what you're asking for:

```javascript
function* iterLeafNodes(strHTML, format=[]) {
  const parser = new DOMParser();
  const doc = parser.parseFromString(strHTML, "text/html");
  const walk = function*(node, format) {
    if (node.nodeType === Node.TEXT_NODE) {
      yield { text: node.nodeValue, format };
    } else if (node.nodeType === Node.ELEMENT_NODE) {
      for (const child of node.childNodes) {
        yield* walk(child, format.concat(node.nodeName));
      }
    }
  };
  for (const child of doc.body.childNodes) {
    yield* walk(child, format);
  }
}
```

This function uses a recursive generator to walk the DOM tree. It yields an object for each text node it encounters, with the text and the list of ancestor element node names (which represent the formatting). The `concat` method is used to add the current node's name to the format list for its children.