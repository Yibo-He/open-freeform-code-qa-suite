You can create a button and an onClick event handler to get the value of the input field. Here's how you can do it:

```javascript
import React, { useState } from 'react';

export default function InputField({name,label}) {
  const [state, setState] = useState('')

  const handleClick = () => {
    alert(`Value of input field is: ${state}`);
  }

  return (
    <div>
      <label>{label}</label>
      <input 
        type="text" 
        value={state} 
        name={name}
        onChange={(e) => setState(e.target.value)} 
      />
      <button onClick={handleClick}>Get Value</button>
      {state}
    </div>
  );
}
```

In the above code, I have added a button with an onClick event handler `handleClick`. When you click the button, it will alert the current value of the input field. 

If you want to get the values of multiple fields (like first name and last name), you can use an object as the state:

```javascript
import React, { useState } from 'react';

export default function InputField() {
  const [state, setState] = useState({ firstName: '', lastName: '' })

  const handleChange = (e) => {
    setState({
      ...state,
      [e.target.name]: e.target.value
    });
  }

  const handleClick = () => {
    alert(`First name is: ${state.firstName}, Last name is: ${state.lastName}`);
  }

  return (
    <div>
      <label>First Name</label>
      <input 
        type="text" 
        value={state.firstName} 
        name="firstName"
        onChange={handleChange} 
      />

      <label>Last Name</label>
      <input 
        type="text" 
        value={state.lastName} 
        name="lastName"
        onChange={handleChange} 
      />

      <button onClick={handleClick}>Get Values</button>
    </div>
  );
}
```

In this code, I have two input fields for first name and last name. The `handleChange` function updates the respective field in the state object. When you click the button, it will alert the current values of the first name and last name fields.