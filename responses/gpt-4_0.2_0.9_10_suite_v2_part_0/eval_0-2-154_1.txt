Sure, here is the implementation of the function:

```javascript
function* iterLeafNodes(strHTML, format = []) {
  const parser = new DOMParser();
  const doc = parser.parseFromString(strHTML, "text/html");
  const body = doc.body;

  function* iterNodes(node, format = []) {
    if (node.nodeType === Node.TEXT_NODE) {
      if (node.textContent.trim() !== '') {
        yield { text: node.textContent, format };
      }
    } else if (node.nodeType === Node.ELEMENT_NODE) {
      for (const child of node.childNodes) {
        yield* iterNodes(child, [...format, node.tagName.toLowerCase()]);
      }
    }
  }

  for (const child of body.childNodes) {
    yield* iterNodes(child);
  }
}
```

This function uses a generator function to yield each leaf node in the HTML string. It uses recursion to traverse the DOM tree and yield each text node with its associated format. The format is determined by the tag names of the parent nodes.