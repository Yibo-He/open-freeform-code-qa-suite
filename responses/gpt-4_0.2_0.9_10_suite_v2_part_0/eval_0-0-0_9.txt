Sure, here is a function that does what you want:

```javascript
function keys_and_prices(raw_obj) {
    let keys = Object.keys(raw_obj);
    let prices = keys.map(key => raw_obj[key].price);
    return [keys, prices];
}
```

This function first extracts the keys from the input object using `Object.keys()`. Then it maps over these keys, using each key to access the corresponding `price` field in the original object. The result is an array of prices. Finally, it returns an array containing the keys and prices arrays.

Here is how you can use it:

```javascript
var itemsToBuy = { milk: { quantity : 5, price: 20 }, bread: { quantity : 2, price: 15 }, potato: { quantity : 3, price: 10 } }
let ret = keys_and_prices(itemsToBuy)
console.log(ret[0]) // ["milk", "bread", "potato"]
console.log(ret[1]) // [20, 15, 10]
```

Please note that the order of keys and prices in the returned arrays depends on the order of properties in the original object, which is not guaranteed in JavaScript. If you need the keys and prices in a specific order, you will need to sort the arrays after extracting them.