The `attrs()` function in styled components allows you to set default props for a component. It is useful when you want to set default values for props that are used frequently in your component.

Here is a simple example:

```
import styled from 'styled-components';

const Button = styled.button.attrs(props => ({
  type: props.type || 'button',
  disabled: props.disabled || false
}))`
  background-color: ${props => props.disabled ? 'gray' : 'blue'};
  color: white;
  padding: 10px;
`;

<Button>Click me</Button>
```

In this example, we are creating a `Button` component using styled components. We are using the `attrs()` function to set default props for the `type` and `disabled` props. If these props are not passed to the component, they will default to `button` and `false`, respectively.

We are also using the `disabled` prop to change the background color of the button. If the `disabled` prop is `true`, the background color will be gray, otherwise it will be blue.

Without the `attrs()` function, we would have to manually set default values for these props in the component definition. The `attrs()` function makes it easier to set default props and keep the component definition clean.