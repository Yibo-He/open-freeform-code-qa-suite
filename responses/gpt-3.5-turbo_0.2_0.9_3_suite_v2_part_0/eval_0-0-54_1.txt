Sure, you can achieve this by creating a state for both first name and last name in your parent component and passing them as props to your `InputField` component. Then, you can create a function that will be called on button click and will get the values of both input fields from the state.

Here's an example:

```javascript
import React, { useState } from 'react';
import InputField from './InputField';

export default function ParentComponent() {
  const [firstName, setFirstName] = useState('');
  const [lastName, setLastName] = useState('');

  const handleButtonClick = () => {
    console.log(`First Name: ${firstName}, Last Name: ${lastName}`);
  };

  return (
    <div>
      <InputField label="First Name" name="firstName" value={firstName} onChange={e => setFirstName(e.target.value)} />
      <InputField label="Last Name" name="lastName" value={lastName} onChange={e => setLastName(e.target.value)} />
      <button onClick={handleButtonClick}>Submit</button>
    </div>
  );
}
```

In the `InputField` component, you can remove the `useState` hook and use the `value` and `onChange` props that are passed from the parent component.