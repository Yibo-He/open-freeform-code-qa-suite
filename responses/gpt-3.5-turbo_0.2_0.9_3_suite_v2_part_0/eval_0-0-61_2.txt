To change the background color of the root element dynamically with React, you can use the `ThemeProvider` component from Material-UI. 

Here's an example of how you can use it to switch between light and dark themes:

```jsx
import React, { useState } from 'react';
import { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';
import { CssBaseline } from '@material-ui/core';

function App() {
  const [darkMode, setDarkMode] = useState(false);

  const theme = createMuiTheme({
    palette: {
      type: darkMode ? 'dark' : 'light',
    },
  });

  const handleThemeChange = () => {
    setDarkMode(!darkMode);
  };

  return (
    <ThemeProvider theme={theme}>
      <CssBaseline />
      <div style={{ backgroundColor: theme.palette.background.default }}>
        <h1>Hello World!</h1>
        <button onClick={handleThemeChange}>Toggle Theme</button>
      </div>
    </ThemeProvider>
  );
}

export default App;
```

In this example, we use the `createMuiTheme` function to create a theme object with a `palette` property that changes the type of the theme between 'light' and 'dark' based on the `darkMode` state.

We then wrap our app with the `ThemeProvider` component and pass in the `theme` object as a prop. This will apply the theme to all Material-UI components in our app.

Finally, we use the `CssBaseline` component to apply some basic global styles to our app, and we set the background color of our root element to the default background color of our theme using inline styles.

We also include a button that toggles the `darkMode` state, which will cause the theme to switch between light and dark.