To change the background color of the root element dynamically with React and Material-UI, you can use the `ThemeProvider` component provided by Material-UI. 

Here's an example of how to use it:

```jsx
import React, { useState } from 'react';
import { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';
import { Button } from '@material-ui/core';

function App() {
  const [isDarkMode, setIsDarkMode] = useState(false);

  const theme = createMuiTheme({
    palette: {
      type: isDarkMode ? 'dark' : 'light',
    },
  });

  const handleToggleDarkMode = () => {
    setIsDarkMode(!isDarkMode);
  };

  return (
    <ThemeProvider theme={theme}>
      <Button onClick={handleToggleDarkMode}>
        {isDarkMode ? 'Switch to Light Mode' : 'Switch to Dark Mode'}
      </Button>
      <div>
        This is the content of your app.
      </div>
    </ThemeProvider>
  );
}

export default App;
```

In this example, we create a `theme` object using the `createMuiTheme` function from Material-UI. We set the `palette.type` property to `'dark'` or `'light'` depending on the `isDarkMode` state. 

Then, we wrap our app with the `ThemeProvider` component and pass the `theme` object as a prop. Inside the `ThemeProvider`, we can use any Material-UI component and it will use the theme we defined.

Finally, we add a button that toggles the `isDarkMode` state, which will update the theme and change the background color of the root element.