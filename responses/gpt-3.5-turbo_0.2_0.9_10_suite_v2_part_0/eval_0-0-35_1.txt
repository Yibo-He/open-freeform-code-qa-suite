To connect to Heroku Redis using TLS on Node.js with node_redis v3, you should use the `REDIS_TLS_URL` environment variable. Here's an example of how to connect to Heroku Redis using TLS with node_redis v3:

```javascript
const redis = require('redis');
const url = require('url');

const redisUrl = url.parse(process.env.REDIS_TLS_URL);
const client = redis.createClient(redisUrl.port, redisUrl.hostname, {
  tls: {
    rejectUnauthorized: false
  }
});

client.auth(redisUrl.auth.split(":")[1]);

client.on('connect', () => {
  console.log('Connected to Redis');
});

client.on('error', (err) => {
  console.error('Error connecting to Redis:', err);
});
```

Note that we're using the `url` module to parse the `REDIS_TLS_URL` environment variable, and passing the `tls` option to the `createClient` method to enable TLS. We're also setting `rejectUnauthorized` to `false` to disable certificate validation. You should only do this if you trust the network you're connecting to, otherwise you should set it to `true` and provide the appropriate CA certificate. Finally, we're authenticating with the Redis server using the password from the `REDIS_TLS_URL` environment variable.

I hope this helps! Let me know if you have any further questions.