To connect to Heroku Redis using TLS on Node.js with node_redis v3, you should use the `REDIS_TLS_URL` environment variable. Here's an example code snippet:

```javascript
const redis = require('redis');
const url = require('url');

const redisUrl = url.parse(process.env.REDIS_TLS_URL);
const client = redis.createClient(redisUrl.port, redisUrl.hostname, {
  tls: {
    rejectUnauthorized: false
  }
});

client.auth(redisUrl.auth.split(":")[1]);
```

Note that the `rejectUnauthorized` option is set to `false` in the `tls` object. This is because Heroku Redis uses a self-signed certificate, which would otherwise cause the connection to fail. However, this means that the connection is not fully secure, so you should only use this option if you trust the network you're connecting from.

Also, make sure that you have the `redis` and `url` modules installed by running `npm install redis url`.