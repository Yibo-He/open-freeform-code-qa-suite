To create an index of a property in a Mongoose schema using Nest.js, you can use the `@Schema` decorator's `indexes` property. Here's an example:

```javascript
@Schema({
  indexes: [{ fields: { type: 1 }, options: { unique: true } }]
})
export class Schema extends Document {

  @Prop()
  _id: string;

  @Prop({required: true})
  type: string;

  @Prop()
  creationDate: string;

  @Prop()
  name: string;
}

export const MySchema = SchemaFactory.createForClass(Schema);
```

In this example, we're using the `indexes` property to define an index on the `type` property with the `unique` option set to `true`. The `fields` property specifies the fields to index, and the `options` property specifies any additional options for the index.

Note that the `@Prop` decorator's `index` option only sets the `sparse` option for the index, which means that the index will only include documents that have a value for the indexed field. It does not create the index itself.