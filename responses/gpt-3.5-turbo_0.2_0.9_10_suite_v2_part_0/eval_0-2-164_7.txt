The `attrs()` function in styled components allows you to set default props for a component. This means that you can define default values for props that are not explicitly passed to the component.

Here's a simple example:

```
import styled from 'styled-components';

const Button = styled.button.attrs({
  type: 'button',
  disabled: props => props.disabled || false
})`
  background-color: ${props => props.disabled ? 'gray' : 'blue'};
  color: white;
  padding: 10px;
  border: none;
  border-radius: 5px;
`;

// Usage
<Button>Click me!</Button>
```

In this example, we define a `Button` component using styled components. We use the `attrs()` function to set default props for the component. We set the `type` prop to `'button'` and the `disabled` prop to `false` unless it is explicitly passed as `true`.

Then, in the styles for the component, we use the `disabled` prop to determine the background color of the button. If `disabled` is `true`, the background color will be gray, otherwise it will be blue.

By using `attrs()`, we can set default props for the component without having to explicitly pass them every time we use the component. This can make our code more concise and easier to read.