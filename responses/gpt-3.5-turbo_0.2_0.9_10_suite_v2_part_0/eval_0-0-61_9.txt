To change the background color of the root element dynamically with React, you can use the `ThemeProvider` component provided by Material-UI. 

Here's an example of how you can use it to switch between light and dark themes:

```jsx
import React, { useState } from 'react';
import { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';
import { CssBaseline } from '@material-ui/core';

function App() {
  const [darkMode, setDarkMode] = useState(false);

  const theme = createMuiTheme({
    palette: {
      type: darkMode ? 'dark' : 'light',
    },
  });

  const handleThemeChange = () => {
    setDarkMode(!darkMode);
  };

  return (
    <ThemeProvider theme={theme}>
      <CssBaseline />
      {/* your app content here */}
      <button onClick={handleThemeChange}>Toggle dark mode</button>
    </ThemeProvider>
  );
}

export default App;
```

In this example, we're using the `createMuiTheme` function to create a theme object with a `palette` property that specifies the type of the theme (either `'light'` or `'dark'`). We're also using the `CssBaseline` component to apply some basic styles to the page, such as setting the font family and removing margins.

The `ThemeProvider` component wraps your entire app and provides the theme object to all Material-UI components. When the `darkMode` state changes, the theme object is updated with the new palette type, and the changes are applied to all components that use the theme.

Finally, we're using a button to toggle the `darkMode` state, which will switch between the light and dark themes.