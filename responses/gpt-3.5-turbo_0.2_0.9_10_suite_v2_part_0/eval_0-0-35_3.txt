To connect to Heroku Redis using TLS on Node, you should use the `REDIS_TLS_URL` environment variable instead of `REDIS_URL`. Here's an example code snippet using `node_redis` v3:

```javascript
const redis = require('redis');
const url = require('url');

const redisUrl = url.parse(process.env.REDIS_TLS_URL);
const client = redis.createClient(redisUrl.port, redisUrl.hostname, {
  tls: {
    rejectUnauthorized: false
  }
});

client.auth(redisUrl.auth.split(":")[1]);
```

Note that we're passing an options object to `redis.createClient` that includes a `tls` property with `rejectUnauthorized` set to `false`. This is necessary because Heroku's Redis service uses a self-signed certificate, which would normally cause Node to reject the connection. 

Also, make sure to replace `process.env.REDIS_TLS_URL` with the actual environment variable name you're using to store the Redis URL.