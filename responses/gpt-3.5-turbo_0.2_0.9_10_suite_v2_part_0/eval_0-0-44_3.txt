To create an index on a property in a Mongoose schema using Nest.js, you can use the `@Schema` decorator's `indexes` property. Here's an example:

```javascript
@Schema({
  indexes: [{ fields: { type: 1 }, options: { unique: true } }]
})
export class Schema extends Document {

  @Prop()
  _id: string;

  @Prop({required: true})
  type: string;

  @Prop()
  creationDate: string;

  @Prop()
  name: string;
}

export const MySchema = SchemaFactory.createForClass(Schema);
```

In this example, we're creating an index on the `type` property with the `unique` option set to `true`. The `fields` property is an object that specifies the fields to index and the direction of the index (in this case, ascending order). The `options` property is an object that specifies any additional options for the index (in this case, the `unique` option).

Note that you don't need to include the `index` option in the `@Prop` decorator when using the `indexes` property of the `@Schema` decorator.