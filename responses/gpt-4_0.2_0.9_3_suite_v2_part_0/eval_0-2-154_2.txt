Sure, here is a generator function that should do what you're asking for:

```javascript
function* iterLeafNodes(strhtml, format=[]) {
  const parser = new DOMParser();
  const doc = parser.parseFromString(strhtml, 'text/html');
  const body = doc.body;

  function* walk(node, format) {
    if (node.nodeType === Node.TEXT_NODE) {
      yield { text: node.nodeValue, format };
    } else if (node.nodeType === Node.ELEMENT_NODE) {
      const newFormat = [...format];
      if (node.tagName !== 'P') {
        newFormat.push(node.tagName.toLowerCase());
      }
      for (const child of node.childNodes) {
        yield* walk(child, newFormat);
      }
    }
  }

  for (const child of body.childNodes) {
    yield* walk(child, format);
  }
}
```

This function uses a recursive approach to walk the DOM tree, keeping track of the current format as it goes. It yields an object for each text node it encounters, with the text and the current format.