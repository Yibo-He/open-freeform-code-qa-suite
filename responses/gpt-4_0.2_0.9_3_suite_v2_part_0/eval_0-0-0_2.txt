Sure, here is a function that does exactly what you described:

```javascript
function keys_and_prices(raw_obj) {
    let keys = Object.keys(raw_obj);
    let prices = keys.map(key => raw_obj[key].price);
    return [keys, prices];
}
```

This function first extracts the keys from the input object using `Object.keys()`. Then it uses `Array.prototype.map()` to create a new array containing the prices associated with each key. Finally, it returns an array containing the keys and prices arrays.

Here is how you can use it with your example:

```javascript
var itemsToBuy = { milk: { quantity : 5, price: 20 }, bread: { quantity : 2, price: 15 }, potato: { quantity : 3, price: 10 } }
let ret = keys_and_prices(itemsToBuy)
console.log(ret[0]) // ["milk", "bread", "potato"]
console.log(ret[1]) // [20, 15, 10]
```

Please note that the order of keys in JavaScript objects is not guaranteed, so the order of elements in the returned arrays may not match the order in which they appear in the original object.