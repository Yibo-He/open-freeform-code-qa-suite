Sure, here is a function that does what you want:

```javascript
function keys_and_prices(raw_obj) {
    var keys = [];
    var prices = [];

    for (var key in raw_obj) {
        if (raw_obj.hasOwnProperty(key)) {
            keys.push(key);
            prices.push(raw_obj[key].price);
        }
    }

    return [keys, prices];
}
```

This function iterates over the properties of the input object. For each property, it checks if the property is a direct property of the object (not inherited from the prototype chain), and if so, it adds the property name to the `keys` array and the `price` value to the `prices` array. Finally, it returns an array containing the `keys` and `prices` arrays.

Please note that the order of keys in an object is not guaranteed in JavaScript. If you need the keys and prices to be in a specific order, you will need to sort the `keys` and `prices` arrays after they are created.