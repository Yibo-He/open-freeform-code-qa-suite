In react-navigation 5, you can pass parameters to the screen using the `route.params` object. However, you need to make sure that the parameters are serializable. 

In your case, instead of passing the `_onSelectCountry` function as a parameter, you can pass the `setState` function as a parameter. 

Here's an example of how you can do it:

```
_onPress = (country, country_code, calling_code) => {
    const { navigation, route } = this.props;
    navigation.goBack();
    route.params.onSelect({
        country_name: country,
        country_code: country_code,
        calling_code: calling_code
    });
};

<TouchableOpacity
    style={ styles.countrySelector }
    activeOpacity={ 0.7 }
    onPress={ () => Navigation.navigate("CountrySelect", {
        onSelect: this.setState,
        countryCode: this.state.country_code,
    })}
>
</TouchableOpacity>
```

In the child screen, you can call the `onSelect` function with the updated state:

```
_onPress = (country, country_code, calling_code) => {
    const { navigation, route } = this.props;
    navigation.goBack();
    route.params.onSelect({
        country_name: country,
        country_code: country_code,
        calling_code: calling_code
    });
};
```

This way, you can update the state of the parent screen from the child screen.