Sure, here's the completed code:

```
import plotly.figure_factory as ff
import kaleido

def plot_confusion_matrix(matrix: list[list[int]], x_labels: list[str], y_labels: list[str]):
    fig = ff.create_annotated_heatmap(z=matrix, x=x_labels, y=y_labels, colorscale='Viridis')
    fig.update_layout(title='Confusion Matrix', xaxis_title='Predicted', yaxis_title='Actual')
    fig.update_layout(width=500, height=500)
    fig.update_traces(showscale=False)
    return fig
```

This function takes in a confusion matrix as a 2D list of integers, along with lists of x and y labels for the matrix. It uses the `create_annotated_heatmap` function from `plotly.figure_factory` to create a heatmap with annotations for each cell. The `colorscale` argument sets the color scheme for the heatmap.

The function then updates the layout of the figure to add a title and axis labels, as well as setting the width and height of the figure. Finally, it removes the color scale legend from the figure and returns the resulting `plotly` figure object.