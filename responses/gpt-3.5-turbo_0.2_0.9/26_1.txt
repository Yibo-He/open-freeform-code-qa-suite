To fix the issue, you need to use a `watch` function to watch for changes in the `userToLoad` computed property and update the `username` accordingly. Also, you can use the `beforeRouteUpdate` hook to handle the route changes and update the component accordingly.

Here is the updated code:

```
<template>
  <div>{{username}}</div>
</template>

<script lang="ts">
import { computed, defineComponent, ref, getCurrentInstance } from '@vue/composition-api';

export const useUsername = ({ user }) => {
  return { username: user.name };
};

export default defineComponent({
  setup(props, { root }) {
    const vm = getCurrentInstance();

    const userToLoad = computed(() => root.$route.params.userId);
    const listOfUsers = [
      { userId: 1, name: 'user1' },
      { userId: 2, name: 'user2' },
    ];

    const user = ref(listOfUsers.find((u) => u.userId === +userToLoad.value));
    if (!user.value) {
      root.$router.push('/404');
    }

    const { username } = useUsername({ user: user.value });

    const watchUserToLoad = () => {
      user.value = listOfUsers.find((u) => u.userId === +userToLoad.value);
      if (!user.value) {
        root.$router.push('/404');
      }
    };

    watch(userToLoad, watchUserToLoad);

    const beforeRouteUpdate = (to, from, next) => {
      watchUserToLoad();
      next();
    };

