Sure, here is how you can complete your code:

```python
import numpy as np
from matplotlib import pyplot as plt

def draw_histogram():
  x = np.random.randn(100000)
  plt.hist(x, bins=20, edgecolor='black')
  plt.title('Histogram of Normal Distribution')
  plt.xlabel('Value')
  plt.ylabel('Frequency')
  plt.grid(True)
  plt.savefig('figure.pdf')

draw_histogram()
```

In this code, `np.random.randn(100000)` generates 100,000 random numbers from a normal distribution. The `plt.hist` function then creates a histogram from these numbers, with 20 bins. The `edgecolor='black'` argument makes the edges of the bins black for better visibility.

The `plt.title`, `plt.xlabel`, and `plt.ylabel` functions add a title and labels to the x and y axes of the histogram, respectively.

The `plt.grid(True)` function adds a grid to the histogram for better readability.

Finally, `plt.savefig('figure.pdf')` saves the histogram as a PDF file named 'figure.pdf'. The `draw_histogram()` function call at the end runs the function and generates the histogram.