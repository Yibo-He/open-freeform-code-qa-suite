To make VSCode IntelliSense work with an alias, you need to configure both your `jsconfig.json` and your webpack (or similar bundler) configuration. Here's how you can do it:

1. **Configure your `jsconfig.json`**

You need to add the `paths` property to your `jsconfig.json` file. This property should map your alias to the actual path. Here's an example:

```json
{
  "compilerOptions": {
    "baseUrl": ".",
    "paths": {
      "@styles/*": ["src/styled/*"]
    }
  },
  "include": ["src/**/*"]
}
```

This configuration tells VSCode that whenever it sees an import from `@styles`, it should look in the `src/styled` directory.

2. **Configure your bundler**

You also need to tell your bundler about this alias. If you're using webpack, you can do this in your `webpack.config.js` file:

```js
module.exports = {
  //...
  resolve: {
    alias: {
      '@styles': path.resolve(__dirname, 'src/styled/'),
    },
  },
};
```

This configuration tells webpack that whenever it sees an import from `@styles`, it should look in the `src/styled` directory.

After you've made these changes, VSCode should be able to provide IntelliSense for your `@styles` alias, and webpack should be able to correctly bundle your code.

Remember to restart your VSCode after making these changes to make sure they are applied.