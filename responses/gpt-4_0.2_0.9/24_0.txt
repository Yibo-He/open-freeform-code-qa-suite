As of now, there are no official or semi-official guidelines on how to name getters and setters after Java 14 in new code. The JavaBeans naming conventions (getName(), setName()) are still widely used and accepted in the Java community. 

The introduction of records in Java 14 is a new feature that aims to simplify the creation of data carrier classes by providing a compact syntax for declaring classes which hold immutable data. Records automatically provide several methods like equals(), hashCode(), toString(), and accessors for the fields, but these accessors are named directly after the fields, not following the JavaBeans convention.

However, it's important to note that records are not intended to replace all use-cases for classes, and there are many situations where traditional classes with JavaBeans-style getters and setters are still appropriate.

In terms of code style and consistency, it would be up to individual development teams to decide on their conventions. If a codebase is using records, it might be acceptable to use the record-style accessor methods. If not, sticking with the JavaBeans convention would be the way to go.

In conclusion, until there are official guidelines, it's best to stick with the convention that best suits your project and ensures consistency across your codebase.