The issue you're facing is due to the fact that the `setup` function in Vue 3 Composition API only runs once when the component is created. This means that when the route changes, the `setup` function does not re-run, and therefore the `user` and `username` values do not update.

To solve this, you can use a `watch` function to observe changes in the route parameters and update the `user` and `username` values accordingly. 

Here is how you can modify your code:

```javascript
<template>
  <div>{{username}}</div>
</template>

<script lang="ts">
import { computed, defineComponent, ref, getCurrentInstance, watch } from '@vue/composition-api';

export const useUsername = ({ user }) => {
  return { username: user.name };
};

export default defineComponent({
  setup(props, { root }) {
    const vm = getCurrentInstance();

    const userToLoad = computed(() => root.$route.params.userId);
    const listOfUsers = [
      { userId: 1, name: 'user1' },
      { userId: 2, name: 'user2' },
    ];

    const user = ref(null);
    const username = ref(null);

    watch(userToLoad, (newUserId) => {
      const foundUser = listOfUsers.find((u) => u.userId === +newUserId);
      if (!foundUser) {
        root.$router.push('/404');
      } else {
        user.value = foundUser;
        username.value = useUsername({ user: foundUser }).username;
      }
    }, { immediate: true });

