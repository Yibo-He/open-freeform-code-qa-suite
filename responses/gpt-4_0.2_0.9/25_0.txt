In React Navigation 5, passing functions as params is not recommended because it can't be serialized. Instead, you can use React Context or Redux to manage the state across different screens.

Here's how you can do it using React Context:

1. First, create a context:

```jsx
import React from 'react';

export const CountryContext = React.createContext();
```

2. Then, wrap your app with the context provider and maintain the state there:

```jsx
import { CountryContext } from './CountryContext';

export default function App() {
  const [countryData, setCountryData] = React.useState({});

  return (
    <CountryContext.Provider value={{ countryData, setCountryData }}>
      <NavigationContainer>{/* your screens here */}</NavigationContainer>
    </CountryContext.Provider>
  );
}
```

3. In your parent screen, use the context to get the current country data:

```jsx
import { CountryContext } from './CountryContext';

function ParentScreen() {
  const { countryData } = React.useContext(CountryContext);

  return (
    <TouchableOpacity
      style={styles.countrySelector}
      activeOpacity={0.7}
      onPress={() => Navigation.navigate("CountrySelect", { countryCode: countryData.country_code })}
    >
      {/* your code here */}
    </TouchableOpacity>
  );
}
```

4. In your child screen, use the context to update the country data:

```jsx
import { CountryContext } from './CountryContext';

function ChildScreen({ navigation }) {
  const { setCountryData } = React.useContext(CountryContext);

  const _onPress = (