In SwiftUI, `List` and `ForEach` are both used to display a collection of data, but they are used in different contexts and have some differences in functionality.

1. `List`: A `List` in SwiftUI is similar to a UITableView in UIKit. It is a container that presents rows of data arranged in a single column. It is used to present an ordered list of rows that are generated from an input data. Each row is made from a single, reusable view type that is able to configure itself with any item from the data.

2. `ForEach`: `ForEach` is a structure that computes views on demand from an underlying collection of identified data. It is not a view itself, but rather a way to generate views from a collection. It is typically used in conjunction with views like `List`, `HStack`, `VStack`, etc. 

The key difference is that `List` is a view that has a specific visual representation (like a table view), while `ForEach` is just a way to generate views from a collection and doesn't have a visual representation itself. 

You can use `ForEach` inside a `List` to generate rows from a collection of data. For example:

```swift
List {
    ForEach(0..<5) { index in
        Text("Row \(index)")
    }
}
```

In this example, `List` is used to create a table view, and `ForEach` is used to generate a `Text` view for each item in the range 0..<5.