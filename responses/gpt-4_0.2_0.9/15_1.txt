Sure, you can use `io.BytesIO` to save the figure to memory as a PNG and then load that into a `PIL.Image`. Here is the completed code:

```python
import io
from matplotlib import pyplot as plt
from PIL import Image

def transform(input: plt.Figure) -> Image:
    buf = io.BytesIO()
    input.savefig(buf, format='png')
    buf.seek(0)
    img = Image.open(buf)
    return img
```

In this code, `input.savefig(buf, format='png')` saves the figure to the buffer in PNG format. `buf.seek(0)` resets the position to the beginning of the stream so `Image.open(buf)` can read from it. The result is a `PIL.Image` object.