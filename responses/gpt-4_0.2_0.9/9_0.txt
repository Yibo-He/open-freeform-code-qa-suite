In Flutter, the `BottomNavigationBar` widget does not have a direct property to change its height. The height of the `BottomNavigationBar` is determined by the Material Design specifications and is set to a fixed value.

However, you can create a custom widget to achieve this. Here's an example of how you can create a custom `BottomAppBar` to mimic a `BottomNavigationBar` with a custom height:

```dart
class CustomBottomNavigationBar extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return SizedBox(
      height: 50, // This is your custom height
      child: BottomAppBar(
        child: Row(
          children: <Widget>[
            IconButton(
              icon: Icon(Icons.menu),
              onPressed: () {},
            ),
            Spacer(), // Use Spacer to take remaining space
            IconButton(
              icon: Icon(Icons.search),
              onPressed: () {},
            ),
            IconButton(
              icon: Icon(Icons.more_vert),
              onPressed: () {},
            ),
          ],
        ),
      ),
    );
  }
}
```

In this example, we're using a `SizedBox` to wrap the `BottomAppBar` and set a custom height. The `BottomAppBar` contains a `Row` widget that mimics the behavior of a `BottomNavigationBar`.

Remember, this is a workaround and may not work perfectly in all situations. You may need to adjust the code to fit your specific needs.