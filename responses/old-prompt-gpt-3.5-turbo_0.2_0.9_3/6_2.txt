It seems like the issue is related to SSL protocol. You can try accessing the application using `http` instead of `https` by typing `http://localhost:8080` in your browser. If this works, then the issue is related to SSL configuration in your application.

If you want to use `https`, you can try generating a self-signed SSL certificate and configure it in your application. Here are the steps to generate a self-signed SSL certificate:

1. Open a command prompt and navigate to the directory where you want to generate the certificate.
2. Run the following command to generate a private key: `openssl genrsa -out localhost.key 2048`
3. Run the following command to generate a certificate signing request: `openssl req -new -key localhost.key -out localhost.csr`
4. Run the following command to generate a self-signed certificate: `openssl x509 -req -days 365 -in localhost.csr -signkey localhost.key -out localhost.crt`
5. Copy the `localhost.crt` and `localhost.key` files to your application's `src/main/resources/config/tls` directory.
6. Update your application's `application.yml` file to include the following configuration:

```
server:
  port: 8443
  ssl:
    key-store: classpath:config/tls/localhost.jks
    key-store-password: password
    key-store-type: PKCS12
    key-alias: localhost
```

7. Run your application using `mvnw` and try accessing it using `https://localhost:8443`.

Note: You may need to import the `localhost