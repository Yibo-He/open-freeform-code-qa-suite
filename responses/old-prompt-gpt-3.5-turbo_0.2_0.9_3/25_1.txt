In React Navigation 5, you can pass parameters to a screen using the `route.params` object. However, you need to make sure that the parameters are serializable. 

In your case, you are passing a function as a parameter which is not serializable and hence the warning. Instead, you can pass the `onSelect` function as a callback to the child screen and call it with the updated data when the user selects a country. Here's an example:

Parent Screen:

```
_onSelectCountry = (data) => {
    this.setState(data);
};

<TouchableOpacity
    style={ styles.countrySelector }
    activeOpacity={ 0.7 }
    onPress={ () => Navigation.navigate("CountrySelect", {
        onSelect: this._onSelectCountry,
        countryCode: this.state.country_code,
    })}
>
</TouchableOpacity>
```

Child Screen:

```
_onPress = (country, country_code, calling_code) => {
    const { navigation, route } = this.props;
    navigation.goBack();
    route.params.onSelect({
        country_name: country,
        country_code: country_code,
        calling_code: calling_code
    });
};

<TouchableOpacity onPress={() => this._onPress(country, country_code, calling_code)}>
    <Text>{country}</Text>
</TouchableOpacity>
```

Here, the `onSelect` function is passed as a parameter to the child screen and called with the updated data when the user selects a country. This way, you can update the state of the parent screen without passing a non-serializable function as a parameter.