The issue you're facing is due to the way you're destructuring the props in your child component. In your `AddBookForm` component, you're trying to directly destructure `booksRefresh` from the props. However, in React, the props are passed as an object. So, you need to destructure `booksRefresh` from the props object.

Here is the corrected `AddBookForm` component:

```jsx
const AddBookForm = ({booksRefresh}) => {
    const [title, setTitle] = useState();
    const [description, setDescription] = useState();
    const [submitted, setSubmitted] = useState(false);

    const postRequestHandler = () => {
        addBook(title, description);
        booksRefresh();
    }
...
 return (
        ...
            <Button type="submit" onClick={postRequestHandler} variant="outline-success">Add</Button>
        </div>
    )
}
```

In the above code, I have changed `(booksRefresh)` to `({booksRefresh})`. This tells JavaScript to look for a property named `booksRefresh` in the object you're passing, and assign its value to a new local variable also named `booksRefresh`.