The problem you're facing is due to the fact that the `setup` function in Vue 3 Composition API is only called once when the component is created. It's not reactive to route changes. This means that when you navigate to another user, the `setup` function is not called again and the user data is not updated.

To solve this, you can use a `watch` function to observe changes in the route parameters and update the user data accordingly. Here's how you can do it:

```vue
<template>
  <div>{{username}}</div>
</template>

<script lang="ts">
import { computed, defineComponent, ref, watch, getCurrentInstance } from '@vue/composition-api';

export const useUsername = ({ user }) => {
  return { username: user.name };
};

export default defineComponent({
  setup(props, { root }) {
    const vm = getCurrentInstance();

    const userToLoad = computed(() => root.$route.params.userId);
    const listOfUsers = [
      { userId: 1, name: 'user1' },
      { userId: 2, name: 'user2' },
    ];

    const user = ref(listOfUsers.find((u) => u.userId === +userToLoad.value));

    watch(userToLoad, (newUserId) => {
      const newUser = listOfUsers.find((u) => u.userId === +newUserId);
      if (!newUser) {
        root.$router.push('/404');
      } else {
        user.value = newUser;
      }
    }, { immediate: true });

    const { username } = useUsername({ user: user.value