To use `flex-layout` in your `login-view` component, you need to import `FlexLayoutModule` in your `auth.module.ts` file. Here is an example:

```
import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { LoginComponent } from './login/login.component';
import { MaterialModule } from 'src/app/material/material.module';
import { FormsModule, ReactiveFormsModule } from '@angular/forms';
import { FlexLayoutModule } from '@angular/flex-layout';

@NgModule({
  declarations: [LoginComponent],
  imports: [
    CommonModule,
    FormsModule,
    ReactiveFormsModule,
    MaterialModule,
    FlexLayoutModule
  ]
})
export class AuthModule { }
```

After importing `FlexLayoutModule` in `auth.module.ts`, you can use `fxLayout` and `fxFlex` directives in your `login-view` component. Here is an example:

```
<div fxLayout="column" fxLayoutAlign="center center">
  <mat-card>
    <mat-card-header>
      <mat-card-title>Login</mat-card-title>
    </mat-card-header>
    <mat-card-content>
      <form [formGroup]="loginForm" (ngSubmit)="onSubmit()">
        <mat-form-field>
          <input matInput placeholder="Username" formControlName="username">
        </mat-form-field>
        <mat-form-field>
          <input matInput placeholder="Password" type="password" formControlName="password">
        </mat-form-field>
        <button mat-raised-button color="primary" type="submit" [disabled]="loginForm.invalid">Login</button>
      </form>
    </mat-card-content>
  </mat-card>
</div>
```

In this example, `fxLayout="column"` sets the layout direction to column, and `fxLayoutAlign="center center"` centers the content vertically and horizontally.