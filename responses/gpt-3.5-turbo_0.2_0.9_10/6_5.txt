It seems like the issue is related to SSL protocol. You can try accessing the application using HTTP instead of HTTPS by using the following URL: http://localhost:8080. 

If this works, then the issue is related to SSL configuration. You can check the SSL configuration of your application and make sure it is set up correctly. 

If you still want to use HTTPS, then you can try generating a self-signed SSL certificate and configure your application to use it. Here are the steps to generate a self-signed SSL certificate:

1. Open a command prompt and navigate to the Java bin directory (e.g. C:\Program Files\Java\jdk1.8.0_251\bin).
2. Run the following command to generate a keystore file:

   ```
   keytool -genkey -alias tomcat -keyalg RSA -keystore keystore.jks -validity 3650
   ```

   This will generate a keystore file named keystore.jks in the current directory.

3. Update your application's SSL configuration to use this keystore file. You can do this by adding the following properties to your application.properties file:

   ```
   server.ssl.key-store=classpath:keystore.jks
   server.ssl.key-store-password=changeit
   server.ssl.key-password=changeit
   ```

   Make sure to replace "changeit" with your own password.

4. Restart your application and try accessing it using HTTPS again.

Regarding the Apache installation, it is not necessary to install Apache to access your application on localhost. The application should be accessible directly through the URL http://localhost:8080 or https://localhost:8080 if SSL is configured correctly.