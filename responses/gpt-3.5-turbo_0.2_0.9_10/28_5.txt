Sure! Here's the completed function:

```
import plotly.figure_factory as ff
import kaleido

def plot_confusion_matrix(matrix: list[list[int]], x_labels: list[str], y_labels: list[str]):
    fig = ff.create_annotated_heatmap(z=matrix, x=x_labels, y=y_labels, colorscale='Viridis')
    fig.update_layout(title='Confusion Matrix', xaxis_title='Predicted Class', yaxis_title='True Class')
    fig.update_layout(width=500, height=500)
    fig.update_traces(showscale=False)
    return fig
```

This function uses the `create_annotated_heatmap` function from `plotly.figure_factory` to create an annotated heatmap with the given `matrix`, `x_labels`, and `y_labels`. The `colorscale` argument sets the color scheme for the heatmap.

The function then updates the layout of the figure to include a title and axis labels, and sets the width and height of the figure to 500 pixels. Finally, it hides the color scale legend and returns the resulting figure object.

Note that this function requires the `kaleido` package to be installed in order to save the figure as an image file. If you don't need to save the figure as an image, you can remove the `import kaleido` line and the `fig.write_image` line at the end of the function.