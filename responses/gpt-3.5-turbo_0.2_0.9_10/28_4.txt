Sure! Here's the completed function:

```
import plotly.figure_factory as ff
import kaleido

def plot_confusion_matrix(matrix: list[list[int]], x_labels: list[str], y_labels: list[str]):
    fig = ff.create_annotated_heatmap(z=matrix, x=x_labels, y=y_labels, colorscale='Viridis')
    fig.update_layout(title='Confusion Matrix', xaxis_title='Predicted Class', yaxis_title='True Class')
    return fig
```

This function uses the `create_annotated_heatmap` function from `plotly.figure_factory` to create an annotated heatmap from the input confusion matrix. The `x_labels` and `y_labels` are used to label the x and y axes of the heatmap. The `colorscale` argument sets the color scheme for the heatmap.

The resulting figure is then updated with a title and axis labels using the `update_layout` method. Finally, the function returns the `plotly` figure object.